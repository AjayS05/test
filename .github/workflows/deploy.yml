name: Deploy to VM

on:
  push:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1) Checkout repo
      - name: Checkout code
        uses: actions/checkout@v4

      # 2) Rsync code to VM (no git pull on VM)
      - name: Sync files to VM with rsync
        uses: burnett01/rsync-deployments@5.2
        with:
          switches: -avz --delete --exclude '.git*' --exclude '.github*' --exclude 'node_modules'
          path: .
          remote_path: ${{ secrets.DEPLOY_PATH || '/opt/hello-api' }}
          remote_host: ${{ secrets.SSH_HOST }}
          remote_user: ${{ secrets.SSH_USERNAME }}
          remote_key: ${{ secrets.SSH_PRIVATE_KEY }}

      # 3) Install Node & start app
      - name: Configure and start service on VM
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          # passphrase: ${{ secrets.SSH_PASSPHRASE }}   # uncomment if key is passphrase-protected
          script: |
            set -e

            # Ensure Node.js & npm installed
            if ! command -v node >/dev/null 2>&1; then
              curl -fsSL https://deb.nodesource.com/setup_20.x | sudo -E bash -
              sudo apt-get install -y nodejs
            fi

            # Install pm2 globally if not present
            if ! command -v pm2 >/dev/null 2>&1; then
              sudo npm install -g pm2
            fi

            APP_DIR="${DEPLOY_PATH:-/opt/hello-api}"
            cd "$APP_DIR"

            # Install app dependencies
            if [ -f package-lock.json ]; then
              npm ci --omit=dev
            else
              npm install --omit=dev
            fi

            # Allow Node to bind to port 80
            NODE_BIN=$(readlink -f "$(which node)")
            sudo setcap 'cap_net_bind_service=+ep' "$NODE_BIN" || true

            # Start/restart service with pm2
            if pm2 list | grep -q "hello-api"; then
              pm2 restart hello-api
            else
              pm2 start npm --name "hello-api" -- start
            fi
            pm2 save

            # Enable pm2 startup on boot
            sudo env PATH=$PATH:/usr/bin pm2 startup systemd -u $USER --hp $HOME -y >/dev/null 2>&1 || true

            # Open port 80 if firewall (ufw) is active
            if command -v ufw >/dev/null 2>&1 && sudo ufw status | grep -q active; then
              sudo ufw allow 80/tcp || true
            fi
